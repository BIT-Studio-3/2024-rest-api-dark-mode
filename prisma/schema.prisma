// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String          @id @default(uuid())
  name        String
  password    String
  contracts   Contract[]   @relation("UserContracts") 
  systemId    Int
  system      System       @relation(fields: [systemId], references: [id])
  agentData   AgentData[]  @relation("UserAgentData")
}

model Contract {
  id          Int          @id @default(autoincrement())
  type        String
  resource    String
  location    String
  deadline    DateTime
  onAccepted  Int
  onFulfilled Int
  tradeSymbol String
  destinationSymbol String
  unitsRequired Int
  unitsFulfilled  Int
  user              User         @relation("UserContracts", fields: [userId], references: [id]) 
  userId            String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model AgentData {
  id                Int          @id @default(autoincrement())
  name              String
  accountId         Int
  credits           Int
  shipCount         Int
  startingFaction   String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  user        User?       @relation("UserAgentData", fields: [userId], references: [id]) 
  userId      String?        
}

model System {
  id          Int          @id @default(autoincrement())
  name        String
  xCoordinate Float
  yCoordinate Float
  faction     String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  waypoints   Waypoint[]
  users       User[]
}

model Waypoint {
  id          Int          @id @default(autoincrement())
  name        String
  type        String
  systemId    Int
  xCoordinate Float
  yCoordinate Float
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  system      System       @relation(fields: [systemId], references: [id])
  markets     Market[] 
  shipyards   Shipyard[]
}

model Market {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  waypointId  Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  waypoint    Waypoint     @relation(fields: [waypointId], references: [id])
}

model Shipyard {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  waypointId  Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  waypoint    Waypoint     @relation(fields: [waypointId], references: [id])
}